name: CI Pipeline

on:
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # Configurar .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      # Instalar dependências
      - name: Restore dependencies
        run: dotnet restore ./Pediaqui.Catalog/Pediaqui.Catalog.sln

      # Build do projeto
      - name: Build project
        run: dotnet build ./Pediaqui.Catalog/Pediaqui.Catalog.sln --no-restore --configuration Release

      # Executar testes e gerar relatório de cobertura
      - name: Run tests
        run: |
          mkdir -p ./TestResults
          dotnet test ./Pediaqui.Catalog/Pediaqui.Catalog.sln --no-build --configuration Release --collect:"XPlat Code Coverage" --results-directory ./TestResults

      # Publicar relatório de cobertura para o SonarCloud
      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin /k:"Matheus-Tech-Challange_pediaqui.catalog" /o:"matheus-tech-challange" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths=**/coverage.opencover.xml
          dotnet build ./Pediaqui.Catalog/Pediaqui.Catalog.sln --configuration Release
          dotnet sonarscanner end /d:sonar.login=$SONAR_TOKEN

      # Verificar cobertura de testes
      - name: Check coverage
        run: |
          COVERAGE=$(grep -oP '(?<=<coverage>).*(?=</coverage>)' ./TestResults/**/coverage.opencover.xml | awk -F. '{print $1}')
          if [ -z "$COVERAGE" ]; then
            echo "Coverage report not found or empty."
            exit 1
          fi
          if [ "$COVERAGE" -lt 70 ]; then
            echo "Test coverage ($COVERAGE%) is below 70%. Failing the build."
            exit 1
          else
            echo "Test coverage ($COVERAGE%) meets the requirement."
          fi
